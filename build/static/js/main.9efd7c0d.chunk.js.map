{"version":3,"sources":["Snake.js","Food.js","Button.js","Menu.js","App.js","index.js"],"names":["Snake","props","React","createElement","snakeDots","map","dot","i","style","left","concat","top","className","key","Food","Button","_ref","onUp","onDown","onLeft","onRight","onClick","type","value","Menu","onRouteChange","getRandomFood","Math","floor","random","initialState","food","direction","speed","route","App","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","call","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","_toConsumableArray","state","head","length","push","shift","_createClass","setInterval","document","onkeydown","onSnakeOutOfBounds","onSnakeCollapsed","onSnakeEats","gameOver","_this2","snake","pop","forEach","increaseSnake","increaseSpeed","newSnake","unshift","alert","_this$state","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9efd7c0d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Snake = props => {\r\n  return (\r\n    <div>\r\n      {props.snakeDots.map((dot, i) => {\r\n        const style = {\r\n          left: `${dot[0]}%`,\r\n          top: `${dot[1]}%`\r\n        };\r\n        return <div className=\"snake\" key={i} style={style} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Snake;\r\n","import React from \"react\";\r\n\r\nconst Food = props => {\r\n  const style = {\r\n    left: `${props.dot[0]}%`,\r\n    top: `${props.dot[1]}%`\r\n  };\r\n  return <div className=\"food\" style={style} />;\r\n};\r\n\r\nexport default Food;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({ onUp, onDown, onLeft, onRight }) => {\r\n  return (\r\n    <div className=\"buttons\">\r\n      <div className=\"upwards\">\r\n        <input className=\"up\" onClick={onUp} type=\"button\" value=\"UP\" />\r\n      </div>\r\n      <div className=\"sideways\">\r\n        <input className=\"left\" onClick={onLeft} type=\"button\" value=\"LEFT\" />\r\n        <input\r\n          className=\"right\"\r\n          onClick={onRight}\r\n          type=\"button\"\r\n          value=\"RIGHT\"\r\n        />\r\n      </div>\r\n      <div className=\"downwards\">\r\n        <input className=\"down\" onClick={onDown} type=\"button\" value=\"DOWN\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./Menu.css\";\r\n\r\nconst Menu = ({ onRouteChange }) => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div>\r\n        <input\r\n          onClick={onRouteChange}\r\n          className=\"start\"\r\n          type=\"button\"\r\n          value=\"Start Game\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport Snake from \"./Snake\";\r\nimport Food from \"./Food\";\r\nimport Button from \"./Button\";\r\nimport Menu from \"./Menu\";\r\n\r\n// Arrow function\r\nconst getRandomFood = () => {\r\n  let min = 1;\r\n  let max = 98;\r\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\r\n  return [x, y];\r\n};\r\n\r\n// Destructuring makes it easy to extract only what is needed.\r\n//Array\r\nconst initialState = {\r\n  food: getRandomFood(),\r\n  direction: \"RIGHT\",\r\n  speed: 140,\r\n  route: \"menu\",\r\n  snakeDots: [\r\n    [0, 0],\r\n    [0, 2]\r\n  ]\r\n};\r\n\r\n//Class inheritance--Inherits the method from the class \"COMPONENT\"\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n  // Called immediately after player clicked a button\r\n  componentDidMount() {\r\n    setInterval(this.moveSnake, this.state.speed);\r\n    document.onkeydown = this.onKeyDown; //as soon as start interval,already mounted\r\n  }\r\n  //\r\n  componentDidUpdate() {\r\n    this.onSnakeOutOfBounds();\r\n    this.onSnakeCollapsed();\r\n    this.onSnakeEats();\r\n  }\r\n  //Arrow function--keycode for directions\r\n  onKeyDown = (e) => {\r\n    e = e || window.event;\r\n    switch (e.keyCode) {\r\n      case 37:\r\n        this.setState({ direction: \"LEFT\" });\r\n        break;\r\n      case 38:\r\n        this.setState({ direction: \"UP\" });\r\n        break;\r\n      case 39:\r\n        this.setState({ direction: \"RIGHT\" });\r\n        break;\r\n      case 40:\r\n        this.setState({ direction: \"DOWN\" });\r\n        break;\r\n    }\r\n  };\r\n  //Arrow function which defines the movement --in which direction snake moves\r\n  moveSnake = () => {\r\n    let dots = [...this.state.snakeDots];\r\n    let head = dots[dots.length - 1];\r\n    if (this.state.route === \"game\") {\r\n      switch (this.state.direction) {\r\n        case \"RIGHT\":\r\n          head = [head[0] + 2, head[1]];\r\n          break;\r\n        case \"LEFT\":\r\n          head = [head[0] - 2, head[1]];\r\n          break;\r\n        case \"DOWN\":\r\n          head = [head[0], head[1] + 2];\r\n          break;\r\n        case \"UP\":\r\n          head = [head[0], head[1] - 2];\r\n          break;\r\n      }\r\n      dots.push(head);\r\n      dots.shift();\r\n      this.setState({\r\n        snakeDots: dots\r\n      });\r\n    }\r\n  };\r\n\r\n  onSnakeOutOfBounds() {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    if (this.state.route === \"game\") {\r\n      if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\r\n        this.gameOver();\r\n      }\r\n    }\r\n  }\r\n\r\n  onSnakeCollapsed() {\r\n    let snake = [...this.state.snakeDots];\r\n    let head = snake[snake.length - 1];\r\n    snake.pop();\r\n    snake.forEach((dot) => {\r\n      if (head[0] == dot[0] && head[1] == dot[1]) {\r\n        this.gameOver();\r\n      }\r\n    });\r\n  }\r\n\r\n  onSnakeEats() {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    let food = this.state.food;\r\n    if (head[0] == food[0] && head[1] == food[1]) {\r\n      this.setState({\r\n        food: getRandomFood()\r\n      });\r\n      this.increaseSnake();\r\n      this.increaseSpeed();\r\n    }\r\n  }\r\n\r\n  increaseSnake() {\r\n    let newSnake = [...this.state.snakeDots];\r\n    newSnake.unshift([]);\r\n    this.setState({\r\n      snakeDots: newSnake\r\n    });\r\n  }\r\n\r\n  increaseSpeed() {\r\n    if (this.state.speed > 10) {\r\n      this.setState({\r\n        speed: this.state.speed - 20\r\n      });\r\n    }\r\n  }\r\n\r\n  onRouteChange = () => {\r\n    this.setState({\r\n      route: \"game\"\r\n    });\r\n  };\r\n\r\n  gameOver() {\r\n    alert(`GAME OVER, Your score is ${this.state.snakeDots.length - 2}`);\r\n    this.setState(initialState);\r\n  }\r\n\r\n  onDown = () => {\r\n    let dots = [...this.state.snakeDots];\r\n    let head = dots[dots.length - 1];\r\n\r\n    head = [head[0], head[1] + 2];\r\n    dots.push(head);\r\n    dots.shift();\r\n    this.setState({\r\n      direction: \"DOWN\",\r\n      snakeDots: dots\r\n    });\r\n  };\r\n\r\n  onUp = () => {\r\n    let dots = [...this.state.snakeDots];\r\n    let head = dots[dots.length - 1];\r\n\r\n    head = [head[0], head[1] - 2];\r\n    dots.push(head);\r\n    dots.shift();\r\n    this.setState({\r\n      direction: \"UP\",\r\n      snakeDots: dots\r\n    });\r\n  };\r\n\r\n  onRight = () => {\r\n    let dots = [...this.state.snakeDots];\r\n    let head = dots[dots.length - 1];\r\n\r\n    head = [head[0] + 2, head[1]];\r\n    dots.push(head);\r\n    dots.shift();\r\n    this.setState({\r\n      direction: \"RIGHT\",\r\n      snakeDots: dots\r\n    });\r\n  };\r\n\r\n  onLeft = () => {\r\n    let dots = [...this.state.snakeDots];\r\n    let head = dots[dots.length - 1];\r\n\r\n    head = [head[0] - 2, head[1]];\r\n    dots.push(head);\r\n    dots.shift();\r\n    this.setState({\r\n      direction: \"LEFT\",\r\n      snakeDots: dots\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { route, snakeDots, food } = this.state;\r\n    return (\r\n      <div>\r\n        {route === \"menu\" ? (\r\n          <div>\r\n            <Menu onRouteChange={this.onRouteChange} />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"game-area\">\r\n              <Snake snakeDots={snakeDots} />\r\n              <Food dot={food} />\r\n            </div>\r\n            <Button\r\n              onDown={this.onDown}\r\n              onLeft={this.onLeft}\r\n              onRight={this.onRight}\r\n              onUp={this.onUp}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}